{"version":3,"sources":["components/Headers/SearchAppBar.js","components/Table/TableHistory.js","components/Table/TablePayload.js","components/common/Tabs/AntTabs.js","components/common/Tabs/AntTab.js","components/Tab/CustomTab.js","reducers/histReducer.js","reducers/payReducer.js","components/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","classes","dispatchHistory","useContext","HistoryContext","dispatchPayload","PayloadContext","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","InputBase","placeholder","onChange","event","target","value","type","key","input","inputProps","columns","id","label","minWidth","align","TableHistory","useState","page","setPage","rowsPerPage","setRowsPerPage","history","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","TableBody","slice","row","hover","role","tabIndex","format","links","article","href","reddit","wikipedia","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","newPage","onChangeRowsPerPage","payload","size","payload_id","Object","keys","orbit_params","index","AntTabs","withStyles","borderBottom","indicator","Tabs","AntTab","textTransform","fontWeight","typography","fontWeightRegular","fontFamily","join","opacity","fontWeightMedium","selected","props","Tab","disableRipple","demo1","background","paper","demo2","CustomTab","match","params","tabNameToIndex","0","1","React","setValue","newValue","push","allHistory","allPayload","histReducer","state","action","data","filter","obj","values","some","val","String","includes","payReducer","axios","require","createContext","App","useReducer","useEffect","get","then","response","event_date_utc","Date","parse","event_date_unix","catch","error","console","log","customers","norad_id","reused","Provider","exact","from","to","path","render","Boolean","window","location","hostname","ReactDOM","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f5730cdd.chunk.js","sourcesContent":["import React,{useContext} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport {HistoryContext, PayloadContext} from '../App';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nexport default function SearchAppBar() {\n  const classes = useStyles();\n  const {dispatchHistory} = useContext(HistoryContext);\n  const {dispatchPayload} = useContext(PayloadContext);\n  const search = (event)=>{\n    if (event.target.value) {\n      dispatchHistory({type:'search', key: event.target.value})\n      dispatchPayload({type:'search', key: event.target.value})\n      return\n    }\n    dispatchHistory({type:'reset'})\n    dispatchPayload({type:'reset'})\n  }\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            SPACE - X\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              onChange={search}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, {useState, useContext} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {HistoryContext} from '../App';\n\nconst columns = [\n  { id: 'id', label: 'ID', minWidth: 50 },\n  { id: 'title', label: 'Title', minWidth: 100 },\n  { id: 'details', label: 'Details', minWidth: 100 },\n  {\n    id: 'flight_number',\n    label: 'Flight Number',\n    minWidth: 100,\n    align: 'right',\n  },\n  {\n    id: 'event_date_utc',\n    label: 'Event Date',\n    minWidth: 100,\n    align: 'right',\n  }\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n});\n\nexport default function TableHistory() {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const { history } = useContext(HistoryContext);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <>\n    {history && \n      (<Paper className={classes.root}>\n        <TableContainer>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n                <TableCell\n                    style={{ minWidth: 170 }}\n                  >\n                    Links\n                  </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {history.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === 'number' ? column.format(value) : value}\n                        </TableCell>\n                      );\n                    })}\n                    <TableCell>\n                      <ol>\n                        { row.links.article && <li><a href={row.links.article}>Article</a></li>}\n                        { row.links.reddit && <li><a href={row.links.reddit}>Reddit</a></li>}\n                        { row.links.wikipedia && <li><a href={row.links.wikipedia}>Wikipedia</a></li>}\n                      </ol>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={history.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>)}\n    </>\n  );\n}\n","import React, {useState, useContext} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {PayloadContext} from '../App';\n\nconst columns = [\n    {\n        id: 'orbit',\n        label: 'Orbit',\n        minWidth: 100,\n    },\n    {\n        id: 'payload_id',\n        label: 'Payload ID',\n        minWidth: 100,\n        },\n    {\n        id: 'payload_type',\n        label: 'Payload Type',\n        minWidth: 100,\n        },\n    { id: 'customers', label: 'Customers', minWidth: 50 },\n    { id: 'manufacturer', label: 'Manufacturer', minWidth: 100 },\n    { id: 'nationality', label: 'Nationality', minWidth: 100 },\n    {\n        id: 'norad_id',\n        label: 'Norad ID',\n        minWidth: 100,\n    },\n    {\n        id: 'payload_mass_kg',\n        label: 'Payload Mass Kg',\n        minWidth: 100,\n        align: 'right',\n    },\n    {\n        id: 'payload_mass_lbs',\n        label: 'Payload Mass Lbs',\n        minWidth: 100,\n        align: 'right',\n    },\n    {\n        id: 'reused',\n        label: 'Reused',\n        minWidth: 100,\n    },\n  \n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n});\n\nexport default function TableHistory() {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const { payload } = useContext(PayloadContext);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <>\n    {payload && <Paper className={classes.root}>\n      <TableContainer>\n        <Table size=\"small\" stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              <TableCell\n                  style={{ minWidth: 250 }}\n                >\n                  Orbit Params\n              </TableCell>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {payload.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.payload_id}>\n                    <TableCell>\n                    <ol>\n                        {Object.keys(row.orbit_params).map((key,index)=>{\n                            if(row.orbit_params[key]){\n                                return (\n                                    <li key={\"\"+row.payload_id+index+key}>{key} : {row.orbit_params[key]}</li>\n                                )\n                            }\n                            return (<div key={\"\"+row.payload_id+index+key}></div>)\n                        })}\n                    </ol>\n                  </TableCell>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={payload.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>}\n    </>\n  );\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\n\nexport const AntTabs = withStyles({\n    root: {\n      borderBottom: '1px solid #e8e8e8',\n    },\n    indicator: {\n      backgroundColor: '#1890ff',\n    },\n})(Tabs);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Tab from '@material-ui/core/Tab';\n\nexport const AntTab = withStyles((theme) => ({\n    root: {\n      textTransform: 'none',\n      minWidth: 72,\n      fontWeight: theme.typography.fontWeightRegular,\n      marginRight: theme.spacing(4),\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      '&:hover': {\n        color: '#40a9ff',\n        opacity: 1,\n      },\n      '&$selected': {\n        color: '#1890ff',\n        fontWeight: theme.typography.fontWeightMedium,\n      },\n      '&:focus': {\n        color: '#40a9ff',\n      },\n    },\n    selected: {},\n  }))((props) => <Tab disableRipple {...props} />);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TableHistory from '../Table/TableHistory';\nimport TablePayload from '../Table/TablePayload';\nimport { AntTabs } from '../common/Tabs/AntTabs';\nimport { AntTab } from '../common/Tabs/AntTab';\n\n// const AntTabs = withStyles({\n//   root: {\n//     borderBottom: '1px solid #e8e8e8',\n//   },\n//   indicator: {\n//     backgroundColor: '#1890ff',\n//   },\n// })(Tabs);\n\n// const AntTab = withStyles((theme) => ({\n//   root: {\n//     textTransform: 'none',\n//     minWidth: 72,\n//     fontWeight: theme.typography.fontWeightRegular,\n//     marginRight: theme.spacing(4),\n//     fontFamily: [\n//       '-apple-system',\n//       'BlinkMacSystemFont',\n//       '\"Segoe UI\"',\n//       'Roboto',\n//       '\"Helvetica Neue\"',\n//       'Arial',\n//       'sans-serif',\n//       '\"Apple Color Emoji\"',\n//       '\"Segoe UI Emoji\"',\n//       '\"Segoe UI Symbol\"',\n//     ].join(','),\n//     '&:hover': {\n//       color: '#40a9ff',\n//       opacity: 1,\n//     },\n//     '&$selected': {\n//       color: '#1890ff',\n//       fontWeight: theme.typography.fontWeightMedium,\n//     },\n//     '&:focus': {\n//       color: '#40a9ff',\n//     },\n//   },\n//   selected: {},\n// }))((props) => <Tab disableRipple {...props} />);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  padding: {\n    padding: theme.spacing(3),\n  },\n  demo1: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  demo2: {\n    backgroundColor: '#2e1534',\n  },\n}));\n\nexport default function CustomTab(props) {\n  const classes = useStyles();\n  const { match, history } = props;\n  const { params } = match;\n  const { page } = params;\n\n  const tabNameToIndex = {\n    0: \"history\",\n    1: \"payload\"\n  };\n\n  const indexToTabName = {\n    history: 0,\n    payload: 1\n  };\n  const [value, setValue] = React.useState(indexToTabName[page]);\n\n  const handleChange = (event, newValue) => {\n    history.push(`/home/${tabNameToIndex[newValue]}`);\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.demo1}>\n        <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\n          <AntTab label=\"History\" />\n          <AntTab label=\"Payload\" />\n        </AntTabs>\n        {value === 0 && <TableHistory key={0} />}\n        {value === 1 && <TablePayload key={1} />}\n      </div>\n    </div>\n  );\n}\n","let allHistory\nexport default function histReducer(state,action) {\n  switch(action.type){\n    case 'set':\n      allHistory = action.data\n      return action.data\n    case 'reset':\n      return allHistory\n    case 'search':\n      return allHistory.filter(obj => Object.values(obj).some(val =>{\n        if (typeof val === 'string' || val instanceof String) return val.includes(action.key)\n        return false\n      }));\n    default:\n      return state\n  }\n}","let allPayload\nexport default function payReducer(state,action) {\n  switch(action.type){\n    case 'set':\n      allPayload = action.data\n      return action.data\n    case 'reset':\n      return allPayload\n    case 'search':\n      return allPayload.filter(obj => Object.values(obj).some(val =>{\n        if (typeof val === 'string' || val instanceof String) return val.includes(action.key)\n        return false\n      }));\n    default:\n      return state\n  }\n}","import React, { useEffect, useReducer } from 'react';\nimport SearchAppBar from './Headers/SearchAppBar';\nimport CustomTab from './Tab/CustomTab';\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport histReducer from '../reducers/histReducer';\nimport payReducer from '../reducers/payReducer';\nconst axios = require('axios');\n\nexport const HistoryContext = React.createContext();\nexport const PayloadContext = React.createContext();\n\nfunction App() {\n  const [history, dispatchHistory] = useReducer(histReducer,null);\n  const [payload, dispatchPayload] = useReducer(payReducer,null);\n  useEffect(()=>{\n    if (!history) {\n      axios.get('https://api.spacexdata.com/v3/history')\n      .then(function (response) {\n        const data = response.data.map((obj)=>{\n          obj.event_date_utc = String(new Date(Date.parse(obj.event_date_utc)+ obj.event_date_unix))\n          return obj\n        })\n        dispatchHistory({type:'set', data: data})\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n    }\n    if (!payload) {\n      axios.get('https://api.spacexdata.com/v3/payloads')\n      .then(function (response) {\n        const data = response.data.map((obj)=>{\n          obj.customers = obj.customers.join(',')\n          obj.norad_id = obj.norad_id.join(',')\n          obj.reused = String(obj.reused)\n          return obj\n          })\n        dispatchPayload({type:'set', data: data})        \n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n    }\n  },[history,payload])\n\n  return (\n    <>\n    <PayloadContext.Provider value={{ payload, dispatchPayload }}>\n      <HistoryContext.Provider value={{ history, dispatchHistory }}>\n        <SearchAppBar />\n          <Switch>\n            <Redirect exact from=\"/\" to=\"/home/history\" />\n            <Route exact path=\"/home/:page?\" render={props => <CustomTab {...props} />} />\n          </Switch>\n      </HistoryContext.Provider>\n    </PayloadContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <CssBaseline />\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}